# Create savings account
createSavingsAccount.flowState.selectCustomer=Select customer
createSavingsAccount.flowState.enterAccountInfo=Savings account information
createSavingsAccount.flowState.reviewAndSubmit=Review &amp; submit
createSavingsAccount.selectProduct.selectPrompt=--Select--

createSavingsAccount.customerSearch.pageTitle=Create Savings Account

createSavingsAccount.selectCustomer.pageTitle=Create Savings Account
createSavingsAccount.selectCustomer.pageSubtitle=Select a customer
createSavingsAccount.selectCustomer.searchTerm=Search for
createSavingsAccount.selectCustomer.instructions=To select, click on a resulting Client or Group or Center from the list below. Click Cancel to return to Clients &amp; Accounts without submitting information.
createSavingsAccount.selectCustomer.searchLimitReached=The search returned more than {0} matches. Only the first {1} matches were returned. Please refine the search and try again.

createSavingsAccount.selectProduct.pageTitle=Create Savings Account
createSavingsAccount.selectProduct.pageSubtitle=Enter savings account information
createSavingsAccount.selectProduct.instructions=Select a Savings instance. Then click Continue. Click Cancel to return to Clients &amp; Accounts without submitting information. 
createSavingsAccount.selectProduct.selectSavingsProduct=Savings instance name:
createSavingsAccount.selectProduct.requiredFieldsInstructions=*Fields marked with an asterisk are required.
createSavingsAccount.selectProduct.accountOwnerName=Account Owner:

createSavingsAccount.enterAccountInfo.pageTitle=Create Savings Account
createSavingsAccount.enterAccountInfo.pageSubtitle=Enter savings account information
createSavingsAccount.enterAccountInfo.instructions=Complete the fields below. Then click Continue. Click Cancel to return to Clients &amp; Accounts without submitting information.
createSavingsAccount.enterAccountInfo.requiredFieldsInstructions=*Fields marked with an asterisk are required.
createSavingsAccount.enterAccountInfo.accountOwnerName=Account Owner:
createSavingsAccount.enterAccountInfo.selectSavingsProduct=Savings instance name:
createSavingsAccount.enterAccountInfo.productSummary.header=Savings product summary
createSavingsAccount.enterAccountInfo.savingAccountDetail.header=Savings account details
createSavingsAccount.enterAccountInfo.savingAccountDetail.depositAmount.mandatory=Mandatory amount for deposit:
createSavingsAccount.enterAccountInfo.savingAccountDetail.depositAmount.voluntary=Recommended amount for deposit:

createSavingsAccount.preview.pageTitle=Create Savings Account
createSavingsAccount.preview.pageSubtitle=Preview Savings account information
createSavingsAccount.preview.instructions=Review the information below. Click Submit if you are satisfied or click Edit to make changes. Click Cancel to return to Clients &amp; Accounts without submitting information.
createSavingsAccount.preview.requiredFieldsInstructions=*Fields marked with an asterisk are required.
createSavingsAccount.preview.accountOwnerName=Account Owner:
createSavingsAccount.preview.savingsInstanceName=Savings instance name:
createSavingsAccount.preview.instanceInfo=Instance Information
createSavingsAccount.preview.productSummary.header=Savings account information

createSavingsAccount.productSummary.description=Description:
createSavingsAccount.productSummary.typeOfDeposits=Type of deposits:
createSavingsAccount.productSummary.maxWithdrawalAmount=Max amount per withdrawal:
createSavingsAccount.productSummary.balanceForInterestCalculation=Balance used for Interest rate calculation:
createSavingsAccount.productSummary.periodForInterestCalculation=Time period for Interest rate calculation:
createSavingsAccount.productSummary.interestPostingFrequency=Frequency of Interest posting to accounts:
createSavingsAccount.productSummary.minBalanceForInterestCalculation=Min balance required for Interest rate calculation:
createSavingsAccount.productSummary.interestRate=Interest rate:

createSavingsAccount.preview.savingAccountDetail.header=Savings account details
createSavingsAccount.preview.savingAccountDetail.depositAmount.mandatory=Mandatory amount for deposit:
createSavingsAccount.preview.savingAccountDetail.depositAmount.voluntary=Recommended amount for deposit:
createSavingsAccount.preview.editAccountDetailsButton=Edit Savings account information
createSavingsAccount.preview.editQuestionGroupButton=Edit additional information

createSavingsAccount.accountCreated.pleasenote=Please Note:
createSavingsAccount.accountCreated.accountDetails=A new Savings account for {0} has been assigned account #
createSavingsAccount.accountCreated.searchInstruction=You can enter an account number into the search box to access account details.
createSavingsAccount.accountCreated.successMessage=You have successfully created a new Savings account
createSavingsAccount.accountCreated.nextSteps=Suggested next steps
createSavingsAccount.accountCreated.action.viewSavingsAccount=View Savings account details now
createSavingsAccount.accountCreated.action.openNewSavingsAccount=Open new Savings account
createSavingsAccount.accountCreated.action.openNewLoanAccount=Open new Loan account

createSavingsAccount.recurrenceType.daily=daily
createSavingsAccount.recurrenceType.weekly=weekly
createSavingsAccount.recurrenceType.monthly=monthly
createSavingsAccount.recurrenceFrequency.day=day(s)
createSavingsAccount.recurrenceFrequency.month=month(s)
createSavingsAccount.savingsType.mandatory=Mandatory
createSavingsAccount.savingsType.voluntary=Voluntary

NotEmpty.CreateSavingsAccountFormBean.searchString=Please specify Name to be searched.
NotNull.CreateSavingsAccountFormBean.productId=Please select the Product Instance.
NotNull.CreateSavingsAccountFormBean.depositAmount=Please specify deposit amount.
DecimalMin.CreateSavingsAccountFormBean.depositAmount=The deposit amount is invalid because only positive numbers and decimal separator are allowed.
Pattern.CreateSavingsAccountFormBean.mandatoryDepositAmount=The mandatory deposit amount is invalid because only positive numbers and decimal separator are allowed.
DigitsBefore.CreateSavingsAccountFormBean.mandatoryDepositAmount=The recommended amount for deposit is invalid because the number of digits before the decimal separator exceeds the allowed number of {0}
DigitsAfter.CreateSavingsAccountFormBean.mandatoryDepositAmount=The recommended amount for deposit is invalid because the number of digits after the decimal separator exceeds the allowed number of {0}
Pattern.CreateSavingsAccountFormBean.voluntaryDepositAmount=The voluntary deposit amount is invalid because only positive numbers and decimal separator are allowed.

ftl.macro.lookup.recurrenceType.daily=daily
ftl.macro.lookup.recurrenceType.weekly=weekly
ftl.macro.lookup.recurrenceType.monthly=monthly
ftl.macro.lookup.recurrenceType.undefined=undefined
ftl.macro.lookup.recurrenceFrequency.day=day(s)
ftl.macro.lookup.recurrenceFrequency.month=month(s)
ftl.macro.lookup.recurrenceFrequency.undefined=undefined
ftl.macro.lookup.savingsType.mandatory=Mandatory
ftl.macro.lookup.savingsType.voluntary=Voluntary
ftl.macro.lookup.savingsType.undefined=undefined

fundTransfer.backToSelectCustomer=Select different beneficiary
fundTransfer.beneficiary=Beneficiary
fundTransfer.changeAccount=Select different account
fundTransfer.enterDetails=Enter transfer details
fundTransfer.error.notEnough=Not enough balance in the account, please select a different account or specify a smaller amount.
fundTransfer.flowState.selectAccount=Select Account
fundTransfer.flowState.selectCustomer=Select Customer
fundTransfer.flowState.enterDetails=Enter details
fundTransfer.noValidAccount=Selected customer does not have any savings accounts for transfer.
fundTransfer.flowState.reviewAndSubmit=Review & submit
fundTransfer.inactiveBeneficiaryAcc=Warning: Selected account is inactive, it will be reactivated.
fundTransfer.selectAccount=Select savings account to credit
fundTransfer.selectBeneficiary=Select beneficiary
fundTransfer.sourceAccount=Credited account
fundTransfer.targetAccount=Beneficiary account
fundTransfer.transferFunds=Transfer funds

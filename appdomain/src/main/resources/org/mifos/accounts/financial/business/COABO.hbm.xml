<?xml version="1.0" encoding='UTF-8'?>
<!DOCTYPE hibernate-mapping PUBLIC
                            "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
                            "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd" >
<hibernate-mapping>
    <class name="org.mifos.accounts.financial.business.COABO" table="coa">
        <id name="accountId" column="coa_id" access="field">
            <generator class="native" />
        </id>

        <property name="accountName" column="coa_name" access="field" />
        <many-to-one name="associatedGlcode" column="glcode_id"
            class="org.mifos.accounts.financial.business.GLCodeEntity"
            fetch="join" cascade="none" update="false" insert="true"
            unique="true" access="field" />
        <many-to-one name="coaHierarchy" column="coa_id"
            class="org.mifos.accounts.financial.business.COAHierarchyEntity"
            lazy="false" cascade="none" update="false" insert="false"
            unique="true" access="field" />
        <set name="subCategory" cascade="none" inverse="true"
            table="coahierarchy" lazy="false" fetch="join" access="field">
            <key column="parent_coaid" />

            <many-to-many
                class="org.mifos.accounts.financial.business.COAHierarchyEntity"
                column="coa_id" fetch="join" />
        </set>
        <!-- The corresponding Java type is simply a String, but
        accessors/mutators of this field shall only use/provide the
        GLCategoryType constant. -->
        <property name="categoryType" column="category_type" access="field"
        type="string" />

    </class>
    <query name="COABO.getTopLevelAccount"><![CDATA[
        select coa
        from org.mifos.accounts.financial.business.COABO coa,
             org.mifos.accounts.financial.business.COAHierarchyEntity hierarchy,
             org.mifos.accounts.financial.business.GLCodeEntity glCode
        where
            coa.accountId = hierarchy.accountId and
            hierarchy.parentAccount is null and
            coa.associatedGlcode = glCode.glcodeId and
            coa.categoryType = :categoryType
        ]]>
    </query>
    <query name="COABO.getTopLevelAccounts"><![CDATA[
        select coa
        from org.mifos.accounts.financial.business.COABO coa,
             org.mifos.accounts.financial.business.COAHierarchyEntity hierarchy,
             org.mifos.accounts.financial.business.GLCodeEntity glCode
        where
            coa.accountId = hierarchy.accountId and
            hierarchy.parentAccount is null and
            coa.associatedGlcode = glCode.glcodeId
        order by
            glCode.glcode
        ]]>
    </query>
        <query name="COABO.getChildAccounts"><![CDATA[
        select coa
        from org.mifos.accounts.financial.business.COABO coa,
             org.mifos.accounts.financial.business.COAHierarchyEntity hierarchy,
             org.mifos.accounts.financial.business.GLCodeEntity glCode
        where
            coa.accountId = hierarchy.accountId and
            hierarchy.parentAccount = :id and
            coa.associatedGlcode = glCode.glcodeId
        order by
            glCode.glcode
        ]]>
    </query>
    <query name="COABO.getAccountIdForGLCode"><![CDATA[
        select coa.accountId
        from org.mifos.accounts.financial.business.COABO coa,
             org.mifos.accounts.financial.business.GLCodeEntity glCodeEntity
        where
            glCodeEntity.glcode = :glCode and
            coa.associatedGlcode = glCodeEntity.glcodeId
        ]]>
    </query>
    <query name="COABO.getAllCoa">
        <![CDATA[
            from  org.mifos.accounts.financial.business.COABO coa
        ]]>
    </query>
	<sql-query name="COABO.removeCOAparent">
	    <![CDATA[
			DELETE FROM coahierarchy WHERE coa_id = :coa_id AND parent_coaid = :parent_id
        ]]>
	</sql-query>
	<sql-query name="COABO.removeCOA">
	    <![CDATA[
			DELETE FROM coa WHERE coa_id = :coa_id
        ]]>
	</sql-query>
	<sql-query name="COABO.removeGlCode">
	    <![CDATA[
			DELETE FROM gl_code WHERE glcode_id = :glcode_id
        ]]>
	</sql-query>
	<sql-query name="COABO.countGLCodes">
		<return-scalar column="count" type="int"/>
	<![CDATA[
	
	SELECT COUNT(*) count FROM (
		
		SELECT DEPOSIT_GLCODE_ID
		FROM savings_offering
		WHERE DEPOSIT_GLCODE_ID = :glCodeId
		
		UNION ALL
		
		SELECT INTEREST_GLCODE_ID
		FROM savings_offering
		WHERE INTEREST_GLCODE_ID = :glCodeId
		
		UNION ALL 
		
		SELECT GLCODE_ID
		FROM program
		WHERE GLCODE_ID = :glCodeId
		
		UNION ALL
		
		SELECT GLCODE_ID
		FROM prd_offering
		WHERE GLCODE_ID = :glCodeId
		
		UNION ALL
		
		SELECT PRINCIPAL_GLCODE_ID
		FROM loan_offering
		WHERE PRINCIPAL_GLCODE_ID = :glCodeId
		
		UNION ALL
		
		SELECT INTEREST_GLCODE_ID
		FROM loan_offering
		WHERE INTEREST_GLCODE_ID = :glCodeId
		
		UNION ALL
		
		SELECT PENALTIES_GLCODE_ID
		FROM loan_offering
		WHERE PENALTIES_GLCODE_ID = :glCodeId
		
		UNION ALL
		
		SELECT glcode_id
		FROM penalty
		WHERE glcode_id = :glCodeId
		
		UNION ALL
		
		SELECT GLCODE_ID
		FROM financial_trxn
		WHERE GLCODE_ID = :glCodeId
		
		UNION ALL
		
		SELECT GLCODE_ID
		FROM fees
		WHERE GLCODE_ID = :glCodeId
		
	) as total

	]]>
	</sql-query>
	<sql-query name="COA.updateParent">
		 <![CDATA[
			UPDATE coahierarchy
			SET parent_coaid = :parentId
			WHERE coa_id = :id
        ]]>
	</sql-query>
</hibernate-mapping>
